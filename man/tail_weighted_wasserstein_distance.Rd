% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compareDistributions.R
\name{tail_weighted_wasserstein_distance}
\alias{tail_weighted_wasserstein_distance}
\title{A tailweighted Version of 1 dimensional Wasserstein distance betwwen two probability vectors}
\usage{
tail_weighted_wasserstein_distance(
  Q,
  P,
  inverse = F,
  parameter = list(lambda = 0.2, x0 = 10),
  method = "step",
  baseline.weight = 0,
  index = 1:min(c(length(Q), length(P))),
  index.spacing = "equal"
)
}
\arguments{
\item{Q}{probability vector 1}

\item{P}{probability vector 2}

\item{inverse}{changes from right tail to left tail if TRUE}

\item{parameter}{list with lambda -> shape parameter (0 = constant weighting) & x0 -> curve offset (= inflexion point )}

\item{method}{weighting function along index. Available options are: c("constant", "linear, "exponential", "sigmoid", "gompertz")}
}
\value{
wasserstein metric
}
\description{
A tailweighted Version of 1 dimensional Wasserstein distance betwwen two probability vectors
}
\examples{
P <- c(0.025,0.05,0.1,0.15, 0.2, 0.3,0.4, 0.5,0.3,0.1)  # Distribution P
Q <- c(0.025,0.05,0.1,0.15, 0.2, 0.3,0.4, 0.5,0.3,0.1)**6  # Distribution Q

# Ensure the distributions are valid (non-negative and sum to 1)
P <- P / sum(P)
Q <- Q / sum(Q)

tail_weighted_wasserstein_distance(P,Q,inverse=F,method="constant",parameter = list(lambda = 0.2,x0=3))
}
